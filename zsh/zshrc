# export some variables
export GOROOT="/usr/lib/go"
export GOTOOLDIR="/usr/lib/go/pkg/tool/linux_amd64"
export PATH="$PATH:$HOME/go/bin"

typeset -U path cdpath fpath manpath

for profile in ${(z)NIX_PROFILES}; do
  fpath+=($profile/share/zsh/site-functions $profile/share/zsh/$ZSH_VERSION/functions $profile/share/zsh/vendor-completions)
done

HELPDIR="/usr/share/zsh/$ZSH_VERSION/help"

# Use emacs keymap as the default.
bindkey -e

BOOKS="/home/sny/Documents/Library"
MEDIA="/run/media/sny"
NIXCFG="/home/sny/nixos-cfg"
SNYBACKUP="/run/media/sny/SNYBACKUP"
VENTOY="/run/media/sny/Ventoy"


# Oh-My-Zsh/Prezto calls compinit during initialization,
# calling it twice causes slight start up slowdown
# as all $fpath entries will be traversed again.

source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
ZSH_AUTOSUGGEST_STRATEGY=(history)

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff0ff,bg=cyan,bold,underline"

# oh-my-zsh extra settings for plugins

# oh-my-zsh configuration generated by NixOS
plugins=(git)

ZSH_THEME="fox"
source $ZSH/oh-my-zsh.sh

# History options should be set in .zshrc and after oh-my-zsh sourcing.
# See https://github.com/nix-community/home-manager/issues/177.
HISTSIZE="10000"
SAVEHIST="10000"

HISTFILE="$HOME/.zsh_history"
mkdir -p "$(dirname "$HISTFILE")"

setopt HIST_FCNTL_LOCK
unsetopt APPEND_HISTORY
setopt HIST_IGNORE_DUPS
unsetopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
unsetopt HIST_EXPIRE_DUPS_FIRST
setopt SHARE_HISTORY
unsetopt EXTENDED_HISTORY


function tm() {
	argLen=${#@}

	case $argLen in
	0)
		echo "tm <session_name> [<path_for_session>]"
		return
	;;

	1) tmux attach -t $1 ;;
	2) tmux new-session -s $1 -c $2 ;;
	esac
}

alias tmv="tmux list-sessions | cut -d ':' -f 1"

ud() {
	if [ ${#@} -eq 0 ]; then
		echo "ud [m block_device] [u block_device]"
		echo "ud m sda1"
	fi
    DEV=/dev/$2

	case $1 in
	"m")
		udisksctl mount -b $DEV
		return
	;;

	"u")
        if [[ "$(lsof $DEV)" == "" ]]; then
            udisksctl unmount -b $DEV
		    sudo hdparm -Y /dev/${2[1,3]}
        else
            echo Some processes use \'$DEV\'
            lsof $DEV
        fi
        return
	;;
	esac
}

lsmnt() {
	mount | grep $1 | cut -f 3 -d ' '
}

alias lsdev="file /dev/* | grep -iE 'block special' | grep --invert-match loop | cut -f 1 -d ':' | cut -f 3 -d '/'"
alias M="ud m"
alias U="ud u"

E() {
	if [[ $1 == "" ]]; then
		echo "E <session_name>"
		return
	fi
	emacs --daemon=$1; emacsclient -nc --socket=$1
}

RaylibTemplate() {
    if [[ $1 == "" ]]; then
        echo "RaylibTemplate <project_name>"
    fi
    cp -rfv ~/sandbox/templates/raylib-c/ $1
}

calc() {
  echo $(($@))
}

ffsrec() {
    # accept keys to customize these settings
    FNAME=$(date +%Y_%m_%d-%H_%M_%S)
    VSIZE="1920x1080"
    MONITOR="1920,0" # external
    # MONITOR="0,0" # internal
    RATE="60"

    ffmpeg \
        -video_size $VSIZE \
        -framerate $RATE \
        -f x11grab \
        -i :0.0+$MONITOR \
        "$FNAME"_pre.mp4
}

nrn() {
    pkg=$1
    shift
    nix run nixpkgs#$pkg $@
}

nsc() {
  pkg=$1
  shift
  nix shell nixpkgs#$pkg --command $@
}

mkcd() {
    mkdir -p $1 && cd $1
}

if test -n "$KITTY_INSTALLATION_DIR"; then
  export KITTY_SHELL_INTEGRATION="no-rc"
  autoload -Uz -- "$KITTY_INSTALLATION_DIR"/shell-integration/zsh/kitty-integration
  kitty-integration
  unfunction kitty-integration
fi


# Aliases
alias -- 'vimdiff'='nvim -d'

alias -g -- 'chmo'='chmod 754 -Rv'
alias -g -- 'chmoff'='chmod 000 -Rv'
alias -g -- 'd'='dragon -a -x'
alias -g -- 'ds'='doas'
alias -g -- 'e'='nvim'
alias -g -- 'es'='nvim -S'
alias -g -- 'ez'='nvim -S Session.vim'
alias -g -- 'l'='ls'
alias -g -- 'mk'='mkdir -p'
alias -g -- 'mpv'='mpv --config-dir=/etc/mpv/'
alias -g -- 'mpvf'='mpv --fullscreen'
alias -g -- 'mpvn'='mpv --no-video'
alias -g -- 'nb'='nix build'
alias -g -- 'nd'='nix develop'
alias -g -- 'ndc'='nix develop --command'
alias -g -- 'ndce'='nix develop --command emacs &'
alias -g -- 'nde'='nix develop --command nvim -S Session.vim'
alias -g -- 'nor'='doas nixos-rebuild switch --flake /home/sny/nixos-cfg'
alias -g -- 'nori'='doas nixos-rebuild switch --flake /home/sny/nixos-cfg --impure'
alias -g -- 'noru'='nix flake update /home/sny/nixos-cfg && doas nixos-rebuild switch --flake /home/sny/nixos-cfg --upgrade'
alias -g -- 'nr'='nix run'
alias -g -- 'rsync'='rsync -r --info=progress2 --info=name0'
# Named Directory Hashes


source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_HIGHLIGHTERS+=()
